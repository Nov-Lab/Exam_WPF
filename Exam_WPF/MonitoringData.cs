// @(h)MonitoringData.cs ver 0.00 ( '24.06.22 Nov-Lab ) 作成開始
// @(h)MonitoringData.cs ver 0.51 ( '24.06.22 Nov-Lab ) ベータ版完成
// @(h)MonitoringData.cs ver 0.51a( '24.06.26 Nov-Lab ) その他  ：コメント整理

// @(s)
// 　【モニタリングデータ】共有メモリーを通じてデバッグ用プログラムに公開するモニタリングデータを管理します。

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text;


// 名前空間以外は Windows フォーム版と同じです。
namespace Exam_WPF
{
    //====================================================================================================
    /// <summary>
    /// 【モニタリングデータ】共有メモリーを通じてデバッグ用プログラムに公開するモニタリングデータを管理します。
    /// </summary>
    /// <remarks>
    /// 補足<br/>
    /// ・シリアル化対象クラスです。<br/>
    /// </remarks>
    //====================================================================================================
    public partial class MonitoringData
    {
        //====================================================================================================
        // 公開フィールド
        //====================================================================================================
        /// <summary>
        /// 【経過フレーム数】アプリケーションを起動してからの経過フレーム数です。
        /// </summary>
        public int frameCount;

        /// <summary>
        /// 【雪片アニメーション配列】
        /// </summary>
        public SnowflakeAnimation[] snowflakes;


        //====================================================================================================
        // コンストラクター
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【コンストラクター】すべての内容を指定してモニタリングデータの新しいインスタンスを生成します。
        /// </summary>
        /// <param name="frameCount"><inheritdoc cref="frameCount" path="/summary"/></param>
        /// <param name="snowflakes"><inheritdoc cref="snowflakes" path="/summary"/></param>
        //--------------------------------------------------------------------------------
        public MonitoringData(int frameCount, SnowflakeAnimation[] snowflakes)
        {
            this.frameCount = frameCount;
            this.snowflakes = snowflakes;
        }


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【プライベート コンストラクター】XMLシリアル化対応のために用意しているパラメーターなしのコンストラクターです。
        /// </summary>
        //--------------------------------------------------------------------------------
        protected MonitoringData() { }

    } // class

} // namespace
